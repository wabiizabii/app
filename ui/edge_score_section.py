# ui/edge_score_section.py

import streamlit as st
import numpy as np

def render_edge_score_section(analytics_engine, db_handler):
    """
    ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Dashboard ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° Metrics ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö Edge Score
    """
    with st.expander("üöÄ My Edge Score Dashboard", expanded=True):
        
        active_id = st.session_state.get('active_portfolio_id_gs')
        if not active_id:
            st.info("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Portfolio ‡∏ó‡∏µ‡πà Sidebar ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Edge Score")
            return
            
        # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î
        df_actual_trades = db_handler.load_actual_trades()
        
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Metrics
        metrics = analytics_engine.calculate_edge_score_metrics(df_actual_trades, active_id)

        if not metrics:
            st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Edge Score Metrics")
            return

        st.markdown(f"**‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î `{metrics['total_trades']}` ‡∏Ñ‡∏£‡∏±‡πâ‡∏á**")
        st.divider()

        # --- Pillar 1: SKILL ---
        st.subheader("üéì Skill (‡∏ó‡∏±‡∏Å‡∏©‡∏∞)")
        col1, col2, col3 = st.columns(3)
        col1.metric("Profit Factor", f"{metrics['profit_factor']:.2f}")
        col2.metric("Win Rate", f"{metrics['win_rate']:.2f}%")
        col3.metric("Expectancy", f"${metrics['expectancy']:,.2f}")
        st.divider()

        # --- Pillar 2: RISK MANAGEMENT ---
        st.subheader("üõ°Ô∏è Risk (‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á)")
        col4, col5, col6 = st.columns(3)
        col4.metric("Max Drawdown", f"${metrics['max_drawdown']:,.2f}")
        col5.metric("Average Loss", f"${metrics['average_loss']:,.2f}")
        col6.metric("Average RR Ratio", f"1 : {metrics['average_rr_ratio']:.2f}" if metrics['average_rr_ratio'] != np.inf else "N/A")
        st.divider()

        # --- Pillar 3: CONSISTENCY ---
        st.subheader("üîÅ Consistency (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠)")
        col7, col8 = st.columns(2)
        col7.metric("Best Day % of Total Profit", f"{metrics['profit_concentration']:.1f}%")
        col8.metric("Profit per Day (Std. Dev)", f"${metrics['daily_returns_std']:,.2f}")
        st.divider()

        # --- Pillar 4: EXPERIENCE ---
        st.subheader("‚è≥ Experience (‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå)")
        col9, col10 = st.columns(2)
        col9.metric("Total Trades", f"{metrics['total_trades']}")
        col10.metric("Active Trading Days", f"{metrics['active_trading_days']}")